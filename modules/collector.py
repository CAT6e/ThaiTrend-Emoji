"""
Collector module handles the execution's code that analyzes tweets.
"""

# 3rd-Party modules
import emoji

# Pickle is used for saving result
import pickle

def analyze(filenames, usage = {}, behavior = {}, happiness = {}):
	""" Analyze tweet by input the list of filenames, use time_picker() to select time. """

	daily_tweet = "../{}.log".format(filenames)
	
	with open(daily_tweet, "r", encoding="utf8", errors='ignore') as tweet:
		line = tweet.readline()

		while line:

			# Get emoji that found in the tweet
			emoji_found = [emo for emo in line if emo in emoji.UNICODE_EMOJI]

			# Collect emoji usage data
			emoji_usage(emoji_found, usage)
			# Collect emotion from found emoji
			emotion(emoji_found, happiness)
			# Collect emoji typing behavior
			typing_behavior(emoji_found, behavior)

			line = tweet.readline()

	export_filename = filenames.split("/")
	export_filename = export_filename[1]
	export_dict(usage, "ThaiTrend-Emoji/dictionary/usage/daily/%s-usage.pkl" % export_filename)
	export_dict(behavior, "ThaiTrend-Emoji/dictionary/behavior/daily/%s-behavior.pkl" % export_filename)
	export_dict(happiness, "ThaiTrend-Emoji/dictionary/emotion/daily/%s-emotion.pkl" % export_filename)


def emoji_usage(emoji_list, output_dict):
	""" Collect emoji usage """
	for emo in emoji_list:
		if emo not in output_dict:
			output_dict[emo] = 1
		else:
			output_dict[emo] += 1
		return output_dict


def typing_behavior(emoji_list, output_dict):
	""" Collect typing behavior """
	emoji_list.append(" ")
	repeated = 1
	for position in range(len(emoji_list)-1):
		start = emoji_list[position]
		nexts = emoji_list[position+1]
		if start == nexts:
			repeated += 1
		else:
			if repeated > 3:
				repeated = 3
			if start not in output_dict:
				output_dict[start] = {}
				output_dict[start][1] = 0
				output_dict[start][2] = 0
				output_dict[start][3] = 0
			output_dict[start][repeated] += 1
			repeated = 1
	return output_dict


def emotion(input_list, output_dict):
	""" Collect emotion from emoji """
	emotion_mapping = {"ЁЯША":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШГ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШД":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШБ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЖ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЕ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШВ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдг":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШК":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЗ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЩВ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЩГ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЙ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШМ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШН":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШШ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЧ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЩ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЪ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЛ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЬ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЭ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЫ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдЧ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдУ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШО":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдб":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯда":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШТ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЮ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШФ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЯ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"тШ╣" :"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШХ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЩБ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШг":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШЦ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШл":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШй":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШд":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШа":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШб":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШР":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШС":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШп":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШж":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШз":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШо":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ▓":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╡":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ│":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ▒":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШи":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ░":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШв":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШе":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдд":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШн":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШУ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШк":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ┤":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯде":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШм":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдв":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдз":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╖":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдТ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯдХ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШИ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯС┐":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯС╣":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯС║":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТй":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ║":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╕":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╣":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╗":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╝":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╜":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЩА":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ┐":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯШ╛":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯСП":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯСН":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯСО":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЦХ":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"тЭд":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЫ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЪ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЩ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЬ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯЦд":"р╣Др╕бр╣Ир╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТХ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЮ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТУ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЧ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЦ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТШ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЭ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В",
	"ЁЯТЯ":"р╕бр╕╡р╕Др╕зр╕▓р╕бр╕кр╕╕р╕В"}

	for emo in input_list:
		if emo in emotion_mapping:
			feeling = emotion_mapping[emo]
			if feeling not in output_dict:
				output_dict[feeling] = 1
			else:
				output_dict[feeling] += 1

	return output_dict


def export_dict(dictionary, url):
	""" Export processed data to pickle file """
	pickle.dump(dictionary, open(url, "wb"))
